class Stack
{
private:
    int* a; // array for stack
    int max; // max size of array
    int top; // stack top
    sem_t pushable, popable; // semaphores
public:
    Stack(int m)
    {
        a = new int[m];
        max = m;
        top = 0;
        sem_init(&pushable, 0, m);
        sem_init(&popable, 0, 0);
    }

    void push(int x)
    {
        sem_wait(&pushable); // wait for an pushable slot
        a[top] = x;
        ++top;
        sem_post(&popable); // signal a popable slot
    }

    int pop()
    {
        sem_wait(&popable); // wait for a popable slot
        int tmp = a[top];
        --top;
        sem_post(&pushable); // signal an pushable slot
        return tmp;
    }
};
